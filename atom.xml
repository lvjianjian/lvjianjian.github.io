<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>lv~jianjian&#39;s blog</title>
  <subtitle>所爱隔山海,山海皆可平</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-04-06T08:03:50.004Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Zhongjian Lv</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>python中的抽象方法，抽象类，私有，保护方法</title>
    <link href="http://yoursite.com/2017/04/06/python%E4%B8%AD%E7%9A%84%E6%8A%BD%E8%B1%A1%E6%96%B9%E6%B3%95%EF%BC%8C%E6%8A%BD%E8%B1%A1%E7%B1%BB%EF%BC%8C%E7%A7%81%E6%9C%89%EF%BC%8C%E4%BF%9D%E6%8A%A4%E6%96%B9%E6%B3%95/"/>
    <id>http://yoursite.com/2017/04/06/python中的抽象方法，抽象类，私有，保护方法/</id>
    <published>2017-04-06T07:50:32.000Z</published>
    <updated>2017-04-06T08:03:50.004Z</updated>
    
    <content type="html"><![CDATA[<p>平时在python基本不怎么写类，都是定义方法到处调用。但是感觉把公共逻辑封装成抽象类，再继承写独立的逻辑更快更清晰。<br>由于python 没有抽象类、接口的概念，所以要实现这种功能得abc.py 这个类库,具体方式如下：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> abc <span class="keyword">import</span> ABCMeta, abstractmethod</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">abstract1</span><span class="params">(object)</span>:</span></div><div class="line">    __metaclass__ = ABCMeta</div><div class="line"></div><div class="line"><span class="meta">    @abstractmethod</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">print1</span><span class="params">(self)</span>:</span><span class="keyword">pass</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">print2</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">print</span> <span class="string">"Test1 print2"</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__si</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">print</span> <span class="string">"abstract1 si"</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">gong</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">print</span> <span class="string">"abstarct gong"</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_pro</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">print</span> <span class="string">"abstract pro"</span></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">imp1</span><span class="params">(abstract1)</span>:</span></div><div class="line">    __metaclass__ = ABCMeta</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">print1</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">print</span> <span class="string">"imp1 pring1"</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">imp_si</span><span class="params">(self)</span>:</span></div><div class="line">        abstract1.gong()</div><div class="line">        abstract1._pro()</div></pre></td></tr></table></figure></p>
<p><code>_metaclass__ = ABCMeta</code>可以保证在实例化一个抽象类的时候抛出异常。</p>
<p><code>@abstractmethod</code>放在要定义的抽象方法上。</p>
<p>私有方法用2个下划线定义，如<code>__private_functon()</code>，子类无法调用。</p>
<p>保护方法用1个下划线定义，如<code>_protected_function()</code>，子类可以调用。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;平时在python基本不怎么写类，都是定义方法到处调用。但是感觉把公共逻辑封装成抽象类，再继承写独立的逻辑更快更清晰。&lt;br&gt;由于python 没有抽象类、接口的概念，所以要实现这种功能得abc.py 这个类库,具体方式如下：&lt;br&gt;&lt;figure class=&quot;highl
    
    </summary>
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
      <category term="抽象" scheme="http://yoursite.com/tags/%E6%8A%BD%E8%B1%A1/"/>
    
  </entry>
  
  <entry>
    <title>整型操作中判断是否超出边界</title>
    <link href="http://yoursite.com/2017/04/05/%E6%95%B4%E5%BD%A2%E6%93%8D%E4%BD%9C%E4%B8%AD%E5%88%A4%E6%96%AD%E6%98%AF%E5%90%A6%E8%B6%85%E5%87%BA%E8%BE%B9%E7%95%8C/"/>
    <id>http://yoursite.com/2017/04/05/整形操作中判断是否超出边界/</id>
    <published>2017-04-05T06:00:08.000Z</published>
    <updated>2017-04-05T06:14:21.369Z</updated>
    
    <content type="html"><![CDATA[<p>今天leetcode刷题时候遇到了对整型数据的操作，想要对超出最大最小值进行特殊处理。一开始的思路是在对整型数据操作时候存成long型，这样就可以很简单地在末尾进行判断了，但是想到如果是对long做操作难道再把数据类型扩大成biginteger么？<br>因此另一种办法就是在每次操作前进行判断，由于在操作后，其值可能已经超界发生改变就很难判断，所以在操作前用最大或者最小值的整除和取余的值和其判断即可。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//是否会超出最大值</span></div><div class="line"><span class="keyword">if</span> (sum &gt; Integer.MAX_VALUE / <span class="number">10</span>|| (sum == Integer.MAX_VALUE/<span class="number">10</span> &amp;&amp; digit &gt; Integer.MAX_VALUE % <span class="number">10</span>))</div></pre></td></tr></table></figure></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//是否会超出最小值</span></div><div class="line"><span class="keyword">if</span>(sum &lt; Integer.MIN_VALUE / <span class="number">10</span>||(sum == Integer.MIN_VALUE/<span class="number">10</span> &amp;&amp; digit &lt; Integer.MIN_VALUE % <span class="number">10</span>))</div></pre></td></tr></table></figure>
<hr>
<p>leetcode第8题是自己编写一个c的atoi，将一个字符串转成数字，遇到字母即停止读入。超出边界按边界返回，其实现如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">myAtoi</span><span class="params">(String str)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (str == <span class="keyword">null</span>)</div><div class="line">            <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">        str = str.trim();</div><div class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</div><div class="line">        <span class="keyword">boolean</span> findSign = <span class="keyword">false</span>;</div><div class="line">        <span class="keyword">int</span> sign = <span class="number">1</span>;<span class="comment">//符号位</span></div><div class="line">        <span class="keyword">boolean</span> findInteger = <span class="keyword">false</span>;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; str.length(); i++) &#123;</div><div class="line">            <span class="keyword">char</span> a = str.charAt(i);</div><div class="line">            <span class="keyword">if</span> (a &gt;= <span class="string">'0'</span> &amp;&amp; a &lt;= <span class="string">'9'</span>) &#123;</div><div class="line">                <span class="keyword">int</span> digit = sign * (a - <span class="string">'0'</span>);</div><div class="line">                <span class="comment">//判断是否会超出int最大值范围</span></div><div class="line">                <span class="keyword">if</span> (sum &gt; Integer.MAX_VALUE / <span class="number">10</span></div><div class="line">                        || (sum == Integer.MAX_VALUE/<span class="number">10</span> &amp;&amp; digit &gt; Integer.MAX_VALUE % <span class="number">10</span>))&#123;</div><div class="line">                    <span class="keyword">return</span> Integer.MAX_VALUE;</div><div class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span>(sum &lt; Integer.MIN_VALUE / <span class="number">10</span></div><div class="line">                        || (sum == Integer.MIN_VALUE/<span class="number">10</span> &amp;&amp; digit &lt; Integer.MIN_VALUE % <span class="number">10</span>) )&#123;</div><div class="line">                    <span class="keyword">return</span> Integer.MIN_VALUE;</div><div class="line">                &#125;</div><div class="line">                sum = sum * <span class="number">10</span> + digit;</div><div class="line">                findInteger = <span class="keyword">true</span>;</div><div class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(a == <span class="string">'-'</span> &amp;&amp; !findSign &amp;&amp; !findInteger)&#123;</div><div class="line">                findSign = <span class="keyword">true</span>;</div><div class="line">                sign = -<span class="number">1</span>;</div><div class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(a == <span class="string">'+'</span> &amp;&amp; !findSign &amp;&amp; !findInteger)&#123;</div><div class="line">                findSign = <span class="keyword">true</span>;</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> sum;</div><div class="line">    &#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天leetcode刷题时候遇到了对整型数据的操作，想要对超出最大最小值进行特殊处理。一开始的思路是在对整型数据操作时候存成long型，这样就可以很简单地在末尾进行判断了，但是想到如果是对long做操作难道再把数据类型扩大成biginteger么？&lt;br&gt;因此另一种办法就是
    
    </summary>
    
      <category term="leetcode" scheme="http://yoursite.com/categories/leetcode/"/>
    
    
      <category term="leetcode" scheme="http://yoursite.com/tags/leetcode/"/>
    
      <category term="整型操作" scheme="http://yoursite.com/tags/%E6%95%B4%E5%9E%8B%E6%93%8D%E4%BD%9C/"/>
    
  </entry>
  
  <entry>
    <title>remarkable安装</title>
    <link href="http://yoursite.com/2017/03/24/remarkable%E5%AE%89%E8%A3%85/"/>
    <id>http://yoursite.com/2017/03/24/remarkable安装/</id>
    <published>2017-03-24T07:09:04.000Z</published>
    <updated>2017-03-24T11:03:18.634Z</updated>
    
    <content type="html"><![CDATA[<p>今天在用typora的时候发现它在修改文档的时候有些不方便，而且现在我的显示屏也很大，完全可以用双栏的markdown编辑器。因此就决定用remarkable。</p>
<hr>
<p><strong>首先</strong>在<a href="https://remarkableapp.github.io/linux/download.html" title="remarkable下载站" target="_blank" rel="external">remarkable下载页(linux)</a>下载。 这里有deb，prm，github源码等形式。我下的是deb，因为有好多依赖问题，这种东西还是让软件帮我们解决吧。</p>
<p><strong>然后</strong>安装<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo dpkg -i remarkable_1.87_all.deb</div></pre></td></tr></table></figure></p>
<p>发现各种依赖不让装。然后尝试先把其中一个依赖装起来，发现它们似乎相互依赖的样子。怎么样都不行。最后其实只要这些依赖一起安装就可以了。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install -f</div></pre></td></tr></table></figure>
<p>依赖安装好了就可以安装remarkable了。</p>
<p><strong>最后</strong>使用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">remarkable &amp;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天在用typora的时候发现它在修改文档的时候有些不方便，而且现在我的显示屏也很大，完全可以用双栏的markdown编辑器。因此就决定用remarkable。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;首先&lt;/strong&gt;在&lt;a href=&quot;https://remarka
    
    </summary>
    
      <category term="markdown" scheme="http://yoursite.com/categories/markdown/"/>
    
    
      <category term="remarkable" scheme="http://yoursite.com/tags/remarkable/"/>
    
      <category term="ubuntu" scheme="http://yoursite.com/tags/ubuntu/"/>
    
      <category term="安装" scheme="http://yoursite.com/tags/%E5%AE%89%E8%A3%85/"/>
    
  </entry>
  
  <entry>
    <title>markdown语法</title>
    <link href="http://yoursite.com/2017/03/24/markdown%E8%AF%AD%E6%B3%95/"/>
    <id>http://yoursite.com/2017/03/24/markdown语法/</id>
    <published>2017-03-24T05:12:31.000Z</published>
    <updated>2017-03-24T10:14:28.188Z</updated>
    
    <content type="html"><![CDATA[<h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># 一级标题</div><div class="line">## 二级标题</div></pre></td></tr></table></figure>
<p>标题总共由6级，用1个#到6个#表示，#号后面需要跟一个空格。这里不作示例了。</p>
<hr>
<h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">* 1</div><div class="line">* 2</div><div class="line">* 3</div></pre></td></tr></table></figure>
<p>用*表示无序列表，后面需要加一个空格</p>
<ul>
<li>1</li>
<li>2</li>
<li>3</li>
</ul>
<h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">1. 1</div><div class="line">2. 2</div><div class="line">3. 3</div></pre></td></tr></table></figure>
<p>用数字加点的形式表示有序列表，注意空格。</p>
<ol>
<li>1</li>
<li>2</li>
<li>3</li>
</ol>
<hr>
<h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&gt; 这里是引用内容</div></pre></td></tr></table></figure>
<blockquote>
<p>这里是引用内容</p>
<hr>
</blockquote>
<h2 id="链接和图片"><a href="#链接和图片" class="headerlink" title="链接和图片"></a>链接和图片</h2><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[百度](www.baidu.com &quot;百度&quot;)</div></pre></td></tr></table></figure>
<p><a href="www.baidu.com" title="百度">百度</a></p>
<h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">![](http://mouapp.com/Mou_128.png)</div><div class="line">![](markdown语法/oschina.png)</div></pre></td></tr></table></figure>
<p>图片相比链接多了一个感叹号<br><img src="http://mouapp.com/Mou_128.png" alt=""><br><img src="/2017/03/24/markdown语法/oschina.png" alt=""></p>
<p><strong>注意:</strong>这里我用的是hexo，需要另下插件才能把本地的图片显示出来。具体参考<a href="http://www.tuicool.com/articles/umEBVfI" target="_blank" rel="external">http://www.tuicool.com/articles/umEBVfI</a>. 此外根目录下_config.yml中的post_asset_folder设置为true </p>
<hr>
<h2 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h2><p>代码放入由`组成的6个点中，上下各3个</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">set_ch</span><span class="params">()</span>:</span></div><div class="line">    mpl.rcParams[<span class="string">'font.sans-serif'</span>] = [<span class="string">'simhei'</span>] </div><div class="line">    mpl.rcParams[<span class="string">'axes.unicode_minus'</span>] = <span class="keyword">False</span></div></pre></td></tr></table></figure>
<hr>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;标题&quot;&gt;&lt;a href=&quot;#标题&quot; class=&quot;headerlink&quot; title=&quot;标题&quot;&gt;&lt;/a&gt;标题&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div c
    
    </summary>
    
      <category term="markdown" scheme="http://yoursite.com/categories/markdown/"/>
    
    
      <category term="markdown" scheme="http://yoursite.com/tags/markdown/"/>
    
      <category term="语法" scheme="http://yoursite.com/tags/%E8%AF%AD%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>matplotlib中文显示</title>
    <link href="http://yoursite.com/2017/03/24/matplotlib%E4%B8%AD%E6%96%87%E6%98%BE%E7%A4%BA/"/>
    <id>http://yoursite.com/2017/03/24/matplotlib中文显示/</id>
    <published>2017-03-24T05:08:51.000Z</published>
    <updated>2017-03-24T11:49:25.761Z</updated>
    
    <content type="html"><![CDATA[<h1 id="matplotlib中文显示"><a href="#matplotlib中文显示" class="headerlink" title="matplotlib中文显示"></a>matplotlib中文显示</h1><p>今天在ubuntu下用matplotlib显示中文的时候出现了乱码，之前在windows上用了下面这段代码就可以了。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">set_ch</span><span class="params">()</span>:</span></div><div class="line">    mpl.rcParams[<span class="string">'font.sans-serif'</span>] = [<span class="string">'simhei'</span>] <span class="comment"># 指定默认字体</span></div><div class="line">    mpl.rcParams[<span class="string">'axes.unicode_minus'</span>] = <span class="keyword">False</span> <span class="comment"># 解决保存图像是负号'-'显示为方块的问题</span></div></pre></td></tr></table></figure></p>
<p>但是在ubuntu上还是显示不出。主要原因是ubuntu上没有这个字体。所以从windows上把黑体字体搬到ubuntu的下面这个路径下。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/usr/local/lib/python2.7/dist-packages/matplotlib/mpl-data/fonts</div></pre></td></tr></table></figure></p>
<p>可能每台机子具体路径不太一样，需要自己找下。我是通过<code>print matplotlib.__file__</code>找到的。</p>
<p>然后删除~/.cache/matplotlib的缓冲目录就可以了。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;matplotlib中文显示&quot;&gt;&lt;a href=&quot;#matplotlib中文显示&quot; class=&quot;headerlink&quot; title=&quot;matplotlib中文显示&quot;&gt;&lt;/a&gt;matplotlib中文显示&lt;/h1&gt;&lt;p&gt;今天在ubuntu下用matplotlib显
    
    </summary>
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
      <category term="matplotlib" scheme="http://yoursite.com/tags/matplotlib/"/>
    
      <category term="中文显示" scheme="http://yoursite.com/tags/%E4%B8%AD%E6%96%87%E6%98%BE%E7%A4%BA/"/>
    
  </entry>
  
</feed>
